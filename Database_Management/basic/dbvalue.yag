{{/*THIS IS STILL A PROTOTYPE, USE IT AT YOUR OWN RISK!! IT WILL BE RELEASED TO GITHUB SOON*/}}
{{/*
	Trigger: dbvalue
	Trigger Type: Command

	Usage:
	dbvalue <all/user/key> [userid/keyname] <regex>

	Copyright (c): Black Wolf, 2021
	License: MIT
	Repository: https://github.com/BlackWolfWoof/yagpdb-cc/
*/}}
{{$perms := "Administrator"}}
{{/*The bot will check if the user has this permission.
Permissions available: Administrator, ManageServer, ReadMessages, SendMessages, SendTTSMessages, ManageMessages, EmbedLinks, AttachFiles, ReadMessageHistory, MentionEveryone, VoiceConnect, VoiceSpeak, VoiceMuteMembers, VoiceDeafenMembers, VoiceMoveMembers, VoiceUseVAD, ManageNicknames, ManageRoles, ManageWebhooks, ManageEmojis, CreateInstantInvite, KickMembers, BanMembers, ManageChannels, AddReactions, ViewAuditLogs*/}}

{{if not .ExecData}}

	{{if (in (split (index (split (exec "viewperms") "\n") 2) ", ") $perms)}}
		{{$prefix := index (reFindAllSubmatches `Prefix of \x60\d+\x60: \x60(.+)\x60` (exec "prefix")) 0 1}}
		{{$args := parseArgs 2 (print "Wrong arguments passed\n**Usage: dbvalue <all/user/key> [userid/keyname] <regex>**\n\n- `" $prefix "dbvalue all cool` -> Will look for `cool` in the entire database\n- `" $prefix "dbvalue user @Black Wolf#0001 furry` -> Will look for `furry` in all of Wolf's database entries\n- `" $prefix "dbvalue key test hello` -> Will look for `hello` in all entries with the key name `test`")
			(carg "string" "")
			(carg "string" "")
			(carg "string" "")}}
		{{$pattern := `%`}}
		{{if eq ($args.Get 0|lower) "all"}}
			{{$args := parseArgs 2 "" (carg "string" "") (carg "string" "")}}
			{{$x := sendMessageRetID nil (cembed "title" (print "Preparing dbvalue - " ($args.Get 0|title)) "description" (print "**Scanning your entire database might take a while depending on its size.**\n<a:discord_loading:714051544265392229>Scanned: 0/" dbCount "\n🗒️Entries Found: `0`\n<:stopwatch1:650328464825516062>Time left:\n🔎Search phrase: `" ($args.Get 1) "`\nYou will be pinged if the scan is done :)") "color" 0xffff00)}}
			{{execCC .CCID nil 8 (sdict "start" currentTime "type" ($args.Get 0|title) "x" $x "pattern" `%` "userid" false "regex" ($args.Get 1) "prefix" $prefix "ctime" currentTime "sdict" (sdict "all" cslice "often" 0))}}
		{{else if eq ($args.Get 0|lower) "user"}}
			{{$args := parseArgs 3 "" (carg "string" "") (carg "userid" "") (carg "string" "")}}
			{{$x := sendMessageRetID nil (cembed "title" (print "Preparing dbvalue - " ($args.Get 0|title)) "description" (print "**Scanning your entire database might take a while depending on its size.**\n<a:discord_loading:714051544265392229>Scanned: 0/" (dbCount ($args.Get 1)) "\n🗒️Entries Found: `0`\nUserID: `" ($args.Get 1) "\n`<:stopwatch1:650328464825516062>Time left:\n🔎Search phrase: `" ($args.Get 2) "`\nYou will be pinged if the scan is done :)") "color" 0xffff00)}}
			{{execCC .CCID nil 8 (sdict "start" currentTime "type" ($args.Get 0|title) "x" $x "pattern" `%` "userid" ($args.Get 1) "regex" ($args.Get 2) "prefix" $prefix "ctime" currentTime "sdict" (sdict "all" cslice "often" 0))}}
		{{else if eq ($args.Get 0|lower) "key"}}
			{{$x := sendMessageRetID nil (cembed "title" (print "Preparing dbvalue - " ($args.Get 0|title)) "description" (print "**Scanning your entire database might take a while depending on its size.**\n<a:discord_loading:714051544265392229>Scanned: 0/" (dbCount ($args.Get 1)) "\n🗒️Entries Found: `0`\n🔑Key: `" ($args.Get 1) "\n`<:stopwatch1:650328464825516062>Time left:\n🔎Search phrase: `" ($args.Get 2) "`\nYou will be pinged if the scan is done :)") "color" 0xffff00)}}
			{{execCC .CCID nil 8 (sdict "start" currentTime "type" ($args.Get 0|title) "x" $x "pattern" ($args.Get 1) "userid" false "regex" ($args.Get 2) "prefix" $prefix "ctime" currentTime "sdict" (sdict "all" cslice "often" 0))}}
		{{else}}
			{{sendMessage nil (print "Wrong arguments passed\n" $prefix "dbvalue <all/user/key> [userid/keyname] <regex>\n\n- `" $prefix "dbvalue all cool` -> Will look for `cool` in the entrie database\n- " $prefix "dbvalue user @Black Wolf#0001 furry` -> Will look for `furry` in all of Wolf's database entries\n- `" $prefix "dbvalue key test hello` -> Will look for `hello` in all entries with the key name `test`")}}
		{{end}}
	{{else}}
		{{sendMessage nil (cembed "title" "Missing permissions" "description" (print "<:cross:705738821110595607> You are missing the permission `" $perms "` to use this command!") "color" 0xDD2E44)}}
	{{end}}
{{else}}
	{{$o := .ExecData}}{{$skip := or $o.skip 0}}{{$count := or $o.count 0}}{{$grab := or $o.grab ""}}
	{{if $o.userid}}
		{{range (dbGetPattern $o.userid $o.pattern 100 $skip)}}
			{{- if reFind $o.regex (json .Value)}}
				{{- if lt (len $grab) 90000}}
					{{- $grab = print $grab $o.prefix "dbget " .UserID " " .Key "\n"}}
				{{- else}}
					{{- sendMessage nil (complexMessage "content" "Database entries that this was found in: ||If not already installed, add <https://github.com/BlackWolfWoof/yagpdb-cc/blob/master/Database_Management/basic/dbget.yag> to the server||" "file" $grab)}}
					{{- $grab = print $o.prefix "dbget " .UserID " " .Key "\n"}}
				{{- end}}
				{{- $count = add $count 1}}
			{{- end}}
			{{- $skip = add $skip 1 -}}
		{{else}}
			{{$skip = 0}}
		{{end}}
	{{else}}
		{{range (dbTopEntries $o.pattern 100 $skip)}}
			{{- if reFind $o.regex (json .Value)}}
				{{- if lt (len $grab) 90000}}
					{{- $grab = print $grab $o.prefix "dbget " .UserID " " .Key "\n"}}
				{{- else}}
					{{- sendMessage nil (complexMessage "file" $grab)}}
					{{- $grab = print $o.prefix "dbget " .UserID " \"" .Key "\"\n"}}
				{{- end}}
				{{- $count = add $count 1}}
			{{- end}}
			{{- $skip = add $skip 1 -}}
		{{else}}
			{{$skip = 0}}
		{{end}}
	{{end}}
	{{$o.Set "skip" $skip}}{{$o.Set "count" $count}}{{$o.Set "grab" $grab}}

	
	{{if ne $skip 0}}
		{{$dbcount := ""}}{{$_ := ""}}{{if eq $o.type "All"}}{{$dbcount = dbCount}}{{else if eq $o.type "User"}}{{$dbcount = dbCount $o.userid}}{{$_ = print "\nUserID: `" $o.userid "`"}}{{else if eq $o.type "Key"}}{{$dbcount = dbCount $o.pattern}}{{$_ = print "\n🔑Key: `" $o.pattern "`"}}{{end}}
		{{$num := 0}}
		{{range $o.sdict.all}}{{$num = add $num .}}{{end}}{{$num := add $num (round (currentTime.Sub $o.ctime).Seconds|toInt)}}
		
		{{$sdict := sdict "often" (add 1 $o.sdict.often) "all" ($o.sdict.all.Append (round (currentTime.Sub $o.ctime).Seconds|toInt))}}
		{{$o.Set "sdict" $sdict}}
		{{$ttl := print (mult (fdiv (fdiv $num (len $o.sdict.all|add 1)|roundCeil|toInt) 100) (sub $dbcount $o.skip)|roundCeil|toInt) "s"|toDuration}}
		
		{{editMessage nil $o.x (cembed "title" (print "Scanning Database - " $o.type) "description" (print "**Scanning your entire database might take a while depending on its size.**\n<a:discord_loading:714051544265392229>Scanned: " $o.skip "/" $dbcount "\n🗒️Entries Found: `" $o.count "`\n<:stopwatch1:650328464825516062>Time left: " $ttl $_ "\n🔎Search phrase: `" $o.regex "`\nYou will be pinged if the scan is done :)") "color" 0xffff00)}}
		{{$o.Set "ctime" currentTime}}{{$o.Set "dbcount" $dbcount}}
		{{execCC .CCID nil 6 $o}}
	{{else}}
		{{deleteMessage nil $o.x 0}}
		{{sendMessage nil (complexMessage "content" (print .User.Mention " I am done scanning the database <:wolfyey:664130162023202816>") "embed" (cembed "title" "Scanning results" "color" 0x43B581 "description" (print "<:stopwatch1:650328464825516062>Expired time: " (toDuration (print ((currentTime.Sub $o.start).Seconds|roundCeil) "s")) "\n👀Entries Scanned: " $o.dbcount "\n🗒️Entries Found: " $o.count "\n🔎Search phrase: `" $o.regex "`\nIf not already installed, [add this](https://github.com/BlackWolfWoof/yagpdb-cc/blob/master/Database_Management/basic/dbget.yag) code to the server, to view the entries in the file.")) "file" $o.grab)}}
	{{end}}
{{end}}