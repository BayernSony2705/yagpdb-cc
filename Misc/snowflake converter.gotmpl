{{/*
	Trigger: snowflake
	Trigger Type: Command

	Usage:
	snowflake ID/Mention
	snowflake ID/mention ID/mention

	Need help or you found a bug? Join https://discord.gg/GRns3fg or report it on GitHub.

	Copyright: 2020 TheHDCrafter
	License: MIT
	Repository: https://github.com/TheHDCrafter/yagpdb-cc/
*/}}

{{$prefix := index (reFindAllSubmatches `Prefix of \x60\d+\x60: \x60(.+)\x60` (exec "prefix")) 0 1}}
{{$args := parseArgs 1 (print $prefix "snowflake <ID> <ID (optional)>")
	(carg "userid" "snowflake1")
	(carg "userid" "snowflake2")}}
{{$first := div ($args.Get 0) 4194304|mult 1000000|toDuration}}
{{$second := div ($args.Get 1) 4194304|mult 1000000|toDuration}}
{{define "convert"}}
	{{$time1 := (div .Input 4194304|mult 1000000|toDuration|.epoch.Add).In .timezone}}
	{{$days := fdiv (.ctime.Sub $time1).Hours 24}}
	{{$y := fdiv $days 365.25|roundFloor|toFloat}}
	{{$mo := (sub (fdiv $days 30.417) (mult $y 12))|roundFloor|toFloat}}
	{{$d := toFloat (sub $days (add (mult $y 365.25) (mult $mo 30.417)))}}
	{{.Set "e" (print "üóìÔ∏è**" $time1.Day "." (json $time1.Month) "." $time1.Year "** ‚è±Ô∏è" $time1.Hour ":" $time1.Minute "\u200A‚åõ\u200A" (toInt $y) "Y " (toInt $mo) "M " (toInt $d) "D\n" (humanizeDurationSeconds (.ctime.Sub $time1)))}}
	{{.Set "timeout" $time1}}
{{end}}

{{$offset := exec "setz -u"|reFindAllSubmatches `\x60(.+)\x60\s(.+)`}}
{{$timezone := (newDate 0 0 0 0 0 0 (index $offset 0 1)).Location}}
{{$ctime := currentTime.In $timezone}}
{{$set := print "Your timezone is set to " (index $offset 0 0) "."}}

{{if not ($args.Get 1)}}
	{{$e := sdict "Input" ($args.Get 0) "epoch" .DiscordEpoch "ctime" $ctime "TimeHour" .TimeHour "timezone" $timezone}}
	{{template "convert" $e}}
	{{$e := $e.e}}
	{{sendMessage nil (cembed
		"title" "Snowflake 2 Timestamp"
		"fields" (cslice (sdict "name" "How long ago the snowflake was created" "value" (print $set "\nTo change your [timezone](https://kevinnovak.github.io/Time-Zone-Picker/ \"Find out your timezone here\") run the `" $prefix "setz <Area/City>` command.\n\n" $e) "inline" true))
		"footer" (sdict "text" "Date of the snowflake")
		"color" 0xffff00
		"timestamp" ($first | .DiscordEpoch.Add))}}
{{else}}
	{{$smaller := $first}}
	{{$bigger := $second}}
	{{if gt $first $second}}
		{{$smaller = $second}}
		{{$bigger = $first}}
	{{end}}
	{{$e := sdict "Input" ($args.Get 0) "epoch" .DiscordEpoch "ctime" $ctime "TimeHour" .TimeHour "timezone" $timezone}}
	{{template "convert" $e}}
	{{sendMessage nil (cembed
		"title" "Snowflake 2 Timestamp"
		"description" (print $set "\nTo change your [timezone](https://kevinnovak.github.io/Time-Zone-Picker/ \"Find out your timezone here\") run the `" $prefix "setz <Area/City>` command.")
		"fields" (cslice
			(sdict "name" (print "**‚Ä¢** First Snowflake - `" ($args.Get 0) "`") "value" $e.e "inline" true))
		"footer" (sdict "text" "Date of the snowflake")
		"color" 0xffff00
		"timestamp" ($first | .DiscordEpoch.Add))}}
	{{$e := sdict "Input" ($args.Get 1) "epoch" .DiscordEpoch "ctime" $ctime "TimeHour" .TimeHour "timezone" $timezone}}
	{{template "convert" $e}}

	{{$days := fdiv (($bigger | .DiscordEpoch.Add).Sub ($smaller | .DiscordEpoch.Add)).Hours 24}}
	{{$y := fdiv $days 365.25|roundFloor|toFloat}}
	{{$mo := (sub (fdiv $days 30.417) (mult $y 12))|roundFloor|toFloat}}
	{{$d := toFloat (sub $days (add (mult $y 365.25) (mult $mo 30.417)))}}

	{{sendMessage nil (cembed
		"fields" (cslice
			(sdict "name" (print "**‚Ä¢** Second Snowflake - `" ($args.Get 1) "`") "value" $e.e "inline" true)
			(sdict "name" "**‚Ä¢** Time between these two snowflakes" "value" (print "‚åõ\u200A" (toInt $y) "Y " (toInt $mo) "M " (toInt $d) "D\n" (humanizeDurationSeconds (($bigger | .DiscordEpoch.Add).Sub ($smaller | .DiscordEpoch.Add)))) "inline" false))
		"footer" (sdict "text" "Date of the snowflake")
		"color" 0xffff00
		"timestamp" ($second | .DiscordEpoch.Add))}}
{{end}}